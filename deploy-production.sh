#!/bin/bash

# 🚀 MYSETLIST PRODUCTION DEPLOYMENT SCRIPT
# Generated by Sub-Agent 10 - Final Production Deployment Agent

echo "🎯 MYSETLIST PRODUCTION DEPLOYMENT"
echo "=================================="
echo "Date: $(date)"
echo "Environment: Production"
echo ""

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_info() {
    echo -e "${BLUE}ℹ️  $1${NC}"
}

# Pre-deployment checks
echo "🔍 Pre-deployment validation..."

# Check Node.js version
NODE_VERSION=$(node --version)
print_info "Node.js version: $NODE_VERSION"

# Check npm version
NPM_VERSION=$(npm --version)
print_info "npm version: $NPM_VERSION"

# Check environment variables
print_info "Checking environment variables..."
if [ -z "$NEXT_PUBLIC_SUPABASE_URL" ]; then
    print_error "NEXT_PUBLIC_SUPABASE_URL is not set"
    exit 1
fi

if [ -z "$NEXT_PUBLIC_SUPABASE_ANON_KEY" ]; then
    print_error "NEXT_PUBLIC_SUPABASE_ANON_KEY is not set"
    exit 1
fi

if [ -z "$TICKETMASTER_API_KEY" ]; then
    print_error "TICKETMASTER_API_KEY is not set"
    exit 1
fi

print_status "Environment variables validated"

# Install dependencies
print_info "Installing production dependencies..."
npm ci --production
if [ $? -ne 0 ]; then
    print_error "Failed to install dependencies"
    exit 1
fi
print_status "Dependencies installed"

# Type check
print_info "Running TypeScript type check..."
npm run type-check
if [ $? -ne 0 ]; then
    print_error "TypeScript type check failed"
    exit 1
fi
print_status "Type check passed"

# Linting
print_info "Running ESLint..."
npm run lint:check
if [ $? -ne 0 ]; then
    print_warning "ESLint warnings found (non-blocking)"
else
    print_status "Linting passed"
fi

# Build application
print_info "Building application for production..."
npm run build
if [ $? -ne 0 ]; then
    print_error "Build failed"
    exit 1
fi
print_status "Build completed successfully"

# Database validation
print_info "Validating database connection..."
node -e "
const { createClient } = require('@supabase/supabase-js');
const supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);
supabase.from('artists').select('count').limit(1).then(({ error }) => {
    if (error) {
        console.error('Database connection failed:', error.message);
        process.exit(1);
    }
    console.log('Database connection successful');
    process.exit(0);
});
"
if [ $? -ne 0 ]; then
    print_error "Database validation failed"
    exit 1
fi
print_status "Database validation passed"

# Start performance monitoring
print_info "Starting performance monitoring..."
if [ -f "./performance-monitoring-script.mjs" ]; then
    node performance-monitoring-script.mjs &
    MONITOR_PID=$!
    print_status "Performance monitoring started (PID: $MONITOR_PID)"
else
    print_warning "Performance monitoring script not found"
fi

# Create production ecosystem file for PM2
print_info "Creating PM2 ecosystem configuration..."
cat > ecosystem.config.js << EOL
module.exports = {
  apps: [
    {
      name: 'mysetlist',
      script: 'node_modules/.bin/next',
      args: 'start',
      instances: 'max',
      exec_mode: 'cluster',
      env: {
        NODE_ENV: 'production',
        PORT: 3000
      },
      error_file: './logs/err.log',
      out_file: './logs/out.log',
      log_file: './logs/combined.log',
      time: true,
      max_memory_restart: '1G',
      restart_delay: 4000,
      autorestart: true,
      watch: false
    }
  ]
};
EOL
print_status "PM2 ecosystem configuration created"

# Create logs directory
mkdir -p logs
print_status "Logs directory created"

# Production deployment summary
echo ""
echo "🎯 PRODUCTION DEPLOYMENT SUMMARY"
echo "==============================="
print_status "✅ Dependencies installed"
print_status "✅ TypeScript validation passed"
print_status "✅ Build completed successfully"
print_status "✅ Database connection validated"
print_status "✅ Performance monitoring configured"
print_status "✅ PM2 ecosystem configured"

echo ""
echo "🚀 DEPLOYMENT READY!"
echo "==================="
echo "To start the application:"
echo "1. npm start (simple start)"
echo "2. pm2 start ecosystem.config.js (recommended)"
echo ""
echo "📊 Monitor the application:"
echo "- Logs: tail -f logs/combined.log"
echo "- Performance: http://localhost:3000/api/stats"
echo "- Health: http://localhost:3000/api/sync/health"
echo ""
echo "🎯 Application URL: http://localhost:3000"
echo "📈 Performance monitoring active"
echo ""

print_info "Production deployment preparation complete!"
print_status "MySetlist is ready for production!"