apiVersion: v1
kind: Service
metadata:
  name: mysetlist-app
  namespace: mysetlist-production
  labels:
    app: mysetlist
    component: frontend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/api/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: mysetlist
    component: frontend
  sessionAffinity: None

---
apiVersion: v1
kind: Service
metadata:
  name: mysetlist-nginx
  namespace: mysetlist-production
  labels:
    app: mysetlist
    component: nginx
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app: mysetlist
    component: nginx
  sessionAffinity: None
  externalTrafficPolicy: Local

---
apiVersion: v1
kind: Service
metadata:
  name: mysetlist-headless
  namespace: mysetlist-production
  labels:
    app: mysetlist
    component: frontend
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: mysetlist
    component: frontend
  publishNotReadyAddresses: true