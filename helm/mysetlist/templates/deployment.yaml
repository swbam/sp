apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mysetlist.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "mysetlist.labels" . | nindent 4 }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicas }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "mysetlist.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.pod.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "mysetlist.selectorLabels" . | nindent 8 }}
        {{- with .Values.pod.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mysetlist.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.pod.securityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.container.name }}
          securityContext:
            {{- toYaml .Values.container.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- if .Values.secrets.create }}
            - name: NEXT_PUBLIC_SUPABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "mysetlist.secretName" . }}
                  key: supabase-url
            - name: NEXT_PUBLIC_SUPABASE_ANON_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "mysetlist.secretName" . }}
                  key: supabase-anon-key
            - name: SUPABASE_SERVICE_ROLE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "mysetlist.secretName" . }}
                  key: supabase-service-role-key
            - name: SPOTIFY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "mysetlist.secretName" . }}
                  key: spotify-client-id
            - name: SPOTIFY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "mysetlist.secretName" . }}
                  key: spotify-client-secret
            - name: TICKETMASTER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "mysetlist.secretName" . }}
                  key: ticketmaster-api-key
            - name: SETLISTFM_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "mysetlist.secretName" . }}
                  key: setlistfm-api-key
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "mysetlist.secretName" . }}
                  key: jwt-secret
            - name: CRON_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "mysetlist.secretName" . }}
                  key: cron-secret
            {{- end }}
            {{- if .Values.configMap.create }}
            - name: NEXT_PUBLIC_APP_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "mysetlist.configMapName" . }}
                  key: app-url
            {{- end }}
          resources:
            {{- toYaml .Values.container.resources | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.container.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.container.readinessProbe | nindent 12 }}
          startupProbe:
            {{- toYaml .Values.container.startupProbe | nindent 12 }}
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: cache-volume
              mountPath: /app/.next/cache
            - name: logs-volume
              mountPath: /app/logs
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- with .Values.sidecars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: cache-volume
          emptyDir: {}
        - name: logs-volume
          emptyDir: {}
        {{- if .Values.persistence.enabled }}
        - name: data-volume
          persistentVolumeClaim:
            claimName: {{ include "mysetlist.fullname" . }}-data
        {{- end }}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      restartPolicy: Always
      dnsPolicy: ClusterFirst